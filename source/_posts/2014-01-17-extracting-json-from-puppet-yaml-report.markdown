---
layout: post
title: "Extracting JSON from Puppet YAML Report"
date: 2014-01-17 06:55:04 -0800
comments: true
categories: 
---
### YAML -> JSON via Puppet Gen'ed YAML

In a follow up to the post below, I started thinking about ways to generate a D3 readable JSON on the fly from the puppet generated YAML. I started by using a parser from the node library 'js-yaml'. My YAML format looked like this:

{% codeblock lang:yaml last_puppet_run.yaml%}
---
  metrics:
    resources: !ruby/object:Puppet::Util::Metric
      name: resources
      label: Resources
      values:
        - - total
          - Total
          - 197
        - - skipped
          - Skipped
          - 6
        - - failed
          - Failed
          - 0
        - - failed_to_restart
          - "Failed to restart"
          - 0
        - - restarted
          - Restarted
          - 0
        - - changed
          - Changed
          - 0
        - - out_of_sync
          - "Out of sync"
          - 0
        - - scheduled
          - Scheduled
          - 0
...
{% endcodeblock %}

My original stab at parsing this YAML failed when using the js-yaml node library. This was due to the fact that this is Puppet YAML - it was generated by a ruby class denoted at the top of the file:

{% codeblock lang:yaml last_puppet_run.yaml %}
	resources: !ruby/object:Puppet::Util::Metric
{% endcodeblock %}

So the way to parse this file into a JSON would have to be done using a ruby script where I could import the 'puppet' class directly so the YAML lib would know how to read this particular file. I thought this would be as simple as:

{% codeblock lang:ruby test.rb %}
require 'puppet'
require 'yaml'
require 'json'

datajson = 'report.json'
datafile  = 'last_run_report.yaml'
yaml = YAML.load_file(datafile)
json = yaml.to_json
File.open(datajson, 'w') { |f| f.write json }
{% endcodeblock %}

What I didn't count on was serialization. 

### Serialization 
What would you expect that output to be? I'll give you one clue, it did look like a JSON... sorta:

{% codeblock lang:json report.json %}
{"metrics":{"resources":"#<Puppet::Util::Metric:0x007f8fb8cda088>","time":"#<Puppet::Util::Metric:0x007f8fb8cd80f8>","changes":"#<Puppet::Util::Metric:0x007f8fb8ce1608>","events":"#<Puppet::Util::Metric:0x007f8fb8ce0eb0>"},"logs":["Finished catalog run in 5.57 seconds"],"resource_statuses":{"Schedule[daily]":"#<Puppet::Resource::Status:0x007f8fb8ceaaf0>","Schedule[monthly]":"#<Puppet::Resource::Status:0x007f8fb8ce84f8>","Schedule[hourly]":
{% endcodeblock %}

What's happening here? What happened to all our nice data, all of the sudden it's not human friendly anymore. This data is serialized, it's a by-product of using '.to_json' which is akin to saying 'JSON::dump(datafile)'. 